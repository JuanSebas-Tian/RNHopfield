import React, { Component } from 'react';
import logo from './logo.svg';
import mario from './mario.png';
import './App.css';
import $ from 'jquery';
import math from 'mathjs'

class App extends Component {
  constructor(props){
    super(props)
    this.state = {

      wt: [],

      test: [[-1,1,-1],[-1,1,-1],[-1,-1,-1] ],

      // pregunta: [[-1,1,-1],[-1,1,-1],[-1,-1,-1] ],
      pregunta: [ [-1,-1,-1,-1,1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,1,-1,-1,-1,-1,-1],[-1,-1,1,1,1,-1,-1,-1,-1,-1],[-1,1,-1,-1,-1,-1,-1,1,-1,-1],[-1,1,-1,-1,-1,-1,-1,1,-1,-1],[-1,1,-1,-1,-1,-1,-1,1,-1,-1],[-1,-1,1,-1,-1,-1,1,-1,-1,-1],[-1,-1,-1,1,1,1,-1,-1,-1,-1] ],
                 
      // respuesta: [[-1,-1,-1],[-1,-1,-1],[-1,-1,-1]  ],
      respuesta: [ [-1,-1,-1,-1,1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,1,-1,-1,-1,-1,-1],[-1,-1,1,1,1,-1,-1,-1,-1,-1],[-1,1,-1,-1,-1,-1,-1,1,-1,-1],[-1,1,-1,-1,-1,-1,-1,1,-1,-1],[-1,1,-1,-1,-1,-1,-1,1,-1,-1],[-1,-1,1,-1,-1,-1,1,-1,-1,-1],[-1,-1,-1,1,1,1,-1,-1,-1,-1] ],

      fig1: [ [-1,-1,-1,-1,1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,1,-1,-1,-1,-1,-1],[-1,-1,1,1,1,-1,-1,-1,-1,-1],[-1,1,-1,-1,-1,-1,-1,1,-1,-1],[-1,1,-1,-1,-1,-1,-1,1,-1,-1],[-1,1,-1,-1,-1,-1,-1,1,-1,-1],[-1,-1,1,-1,-1,-1,1,-1,-1,-1],[-1,-1,-1,1,1,1,-1,-1,-1,-1] ],
      figu1: [-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,1,-1,-1,-1,1,-1,-1,-1,-1,-1,1,-1,-1,-1,1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1],
      tFigu1: [[-1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[1],[1],[1],[-1],[-1],[-1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[-1],[-1],[-1],[1],[1],[1],[-1],[-1],[-1],[-1]],
      // fig1: [ [-1,1,-1],[1,1,1],[-1,-1,-1]   ],
      // figu1: [-1,1,-1,1,1,1,-1,-1,-1],
      // tFigu1: [[-1],[1],[-1],[1],[1],[1],[-1],[-1],[-1]],

      fig2: [[1,1,1,1,-1,-1,-1,1,1,1],[1,1,1,-1,1,1,1,-1,1,1],[1,1,-1,1,1,1,1,1,-1,1],[1,-1,1,1,1,1,1,1,1,-1],[1,-1,1,-1,-1,1,-1,-1,1,-1],[1,-1,1,1,1,-1,1,1,1,-1],[1,-1,1,-1,1,1,1,-1,1,-1],[1,1,-1,1,-1,-1,-1,1,-1,1],[1,1,1,-1,1,1,1,-1,1,1],[1,1,1,1,-1,-1,-1,1,1,1]],
      figu2: [1,1,1,1,-1,-1,-1,1,1,1,1,1,1,-1,1,1,1,-1,1,1,1,1,-1,1,1,1,1,1,-1,1,1,-1,1,1,1,1,1,1,1,-1,1,-1,1,-1,-1,1,-1,-1,1,-1,1,-1,1,1,1,-1,1,1,1,-1,1,-1,1,-1,1,1,1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,1,1,1,1,-1,1,1,1,-1,1,1,1,1,1,1,-1,-1,-1,1,1,1],
      tFigu2: [[1],[1],[1],[1],[-1],[-1],[-1],[1],[1],[1],[1],[1],[1],[-1],[1],[1],[1],[-1],[1],[1],[1],[1],[-1],[1],[1],[1],[1],[1],[-1],[1],[1],[-1],[1],[1],[1],[1],[1],[1],[1],[-1],[1],[-1],[1],[-1],[-1],[1],[-1],[-1],[1],[-1],[1],[-1],[1],[1],[1],[-1],[1],[1],[1],[-1],[1],[-1],[1],[-1],[1],[1],[1],[-1],[1],[-1],[1],[1],[-1],[1],[-1],[-1],[-1],[1],[-1],[1],[1],[1],[1],[-1],[1],[1],[1],[-1],[1],[1],[1],[1],[1],[1],[-1],[-1],[-1],[1],[1],[1]],
      // fig2: [ [1,-1,1],[1,-1,1],[1,1,1]  ],
      // figu2: [1,-1,1,1,-1,1,1,1,1],
      // tFigu2: [[1],[-1],[1],[1],[-1],[1],[1],[1],[1]],
              
      fig3: [[-1,-1,-1,-1,1,1,1,-1,-1,-1],[-1,-1,-1,1,-1,-1,-1,1,-1,-1],[-1,-1,1,-1,-1,-1,-1,-1,1,-1],[-1,1,-1,-1,-1,-1,-1,-1,-1,1],[-1,1,-1,1,1,-1,1,1,-1,1],[-1,1,-1,-1,-1,1,-1,-1,-1,1],[-1,1,-1,1,-1,-1,-1,1,-1,1],[-1,-1,1,-1,1,1,1,-1,1,-1],[-1,-1,-1,1,-1,-1,-1,1,-1,-1],[-1,-1,-1,-1,1,1,1,-1,-1,-1]],
      figu3: [-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,1,-1,1,1,-1,1,1,-1,1,-1,1,-1,-1,-1,1,-1,-1,-1,1,-1,1,-1,1,-1,-1,-1,1,-1,1,-1,-1,1,-1,1,1,1,-1,1,-1,-1,-1,-1,1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1],
      tFigu3: [[-1],[-1],[-1],[-1],[1],[1],[1],[-1],[-1],[-1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[-1],[-1],[1],[-1],[-1],[1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[1],[-1],[1],[-1],[1],[1],[-1],[1],[1],[-1],[1],[-1],[1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[1],[-1],[1],[-1],[1],[-1],[-1],[-1],[1],[-1],[1],[-1],[-1],[1],[-1],[1],[1],[1],[-1],[1],[-1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[-1],[-1],[-1],[1],[1],[1],[-1],[-1],[-1]],
      // fig3: [ [-1,1,-1],[1,1,1],[-1,1,-1]  ],
      // figu3: [-1,1,-1,1,1,1,-1,1,-1],
      // tFigu3: [[-1],[1],[-1],[1],[1],[1],[-1],[1],[-1]],

      fig4: [[1,1,1,1,1,1,1,1,1,1],[1,-1,1,-1,1,1,-1,1,-1,1],[1,-1,-1,-1,1,1,-1,-1,-1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,-1,-1,-1,-1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,-1,1,1,1,1,1,1,-1,1],[1,1,-1,1,1,1,1,-1,1,1],[1,1,1,-1,-1,-1,-1,1,1,1],[1,1,1,1,1,1,1,1,1,1]],
      figu4: [1,1,1,1,1,1,1,1,1,1,1,-1,1,-1,1,1,-1,1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,1,1,1,1,1,1,-1,-1,1,1,1,1,1,-1,1,1,1,1,1,1,-1,1,1,1,-1,1,1,1,1,-1,1,1,1,1,1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1],
      tFigu4: [[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[-1],[1],[-1],[1],[1],[-1],[1],[-1],[1],[1],[-1],[-1],[-1],[1],[1],[-1],[-1],[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[-1],[-1],[-1],[-1],[1],[1],[1],[1],[1],[1],[1],[-1],[-1],[1],[1],[1],[1],[1],[-1],[1],[1],[1],[1],[1],[1],[-1],[1],[1],[1],[-1],[1],[1],[1],[1],[-1],[1],[1],[1],[1],[1],[-1],[-1],[-1],[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
      // fig4: [ [1,-1,1],[-1,1,-1],[1,-1,1]  ],
      // figu4: [1,-1,1,-1,1,-1,1,-1,1],
      // tFigu4: [[1],[-1],[1],[-1],[1],[-1],[1],[-1],[1]],

      fig5: [[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[-1,1,-1,1,-1,-1,1,-1,1,-1],[-1,1,1,1,-1,-1,1,1,1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[-1,-1,-1,1,1,1,1,-1,-1,-1],[-1,-1,-1,-1,1,1,-1,-1,-1,-1],[-1,1,-1,-1,-1,-1,-1,-1,1,-1],[-1,-1,1,-1,-1,-1,-1,1,-1,-1],[-1,-1,-1,1,1,1,1,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]],
      figu5: [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
      tFigu5: [[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[1],[-1],[1],[-1],[-1],[1],[-1],[1],[-1],[-1],[1],[1],[1],[-1],[-1],[1],[1],[1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[1],[1],[1],[1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[1],[1],[-1],[-1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[-1],[1],[-1],[-1],[-1],[-1],[-1],[1],[1],[1],[1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1]],
      // fig5: [ [1,1,1],[1,-1,1],[-1,-1,-1]  ],
      // figu5: [1,1,1,1,-1,1,-1,-1,-1], 
      // tFigu5: [[1],[1],[1],[1],[-1],[1],[-1],[-1],[-1]],
    }
  }

  componentDidMount(){
    // const f = this.state.figu1.forEach(i=>{
    //   this.state.figu1.forEach(j=>{j})
    // })
    const w = []
    const i = this.state.figu1//[1,1,-1,-1]
    for (let h = 0; h < i.length; h++) {
      const q = []
      for (let j = 0; j < i.length; j++) {
        q.push(i[h]*i[j])
      }
      w.push(q)
    }
    
    const e = []
    const z = this.state.figu2//[-1,-1,1,1]
    for (let h = 0; h < z.length; h++) {
      const q = []
      for (let j = 0; j < z.length; j++) {
        q.push(z[h]*z[j])
      }
      e.push(q)
    }    
    
    const u = []
    const y = this.state.figu3//[-1,1,-1,1]
    for (let h = 0; h < y.length; h++) {
      const q = []
      for (let j = 0; j < y.length; j++) {
        q.push(y[h]*y[j])
      }
      u.push(q)
    }

    const x = []
    const c = this.state.figu3//[-1,1,-1,1]
    for (let h = 0; h < c.length; h++) {
      const q = []
      for (let j = 0; j < c.length; j++) {
        q.push(c[h]*c[j])
      }
      x.push(q)
    }

    const v = []
    const s = this.state.figu3//[-1,1,-1,1]
    for (let h = 0; h < s.length; h++) {
      const q = []
      for (let j = 0; j < s.length; j++) {
        q.push(s[h]*s[j])
      }
      v.push(q)
    }

    this.setState({wt : math.add(w,e,u,x,v)})
  }

  handleReconocer(){

    const {wt} = this.state
    let vali = true
    const tempo = []

    let entrada = []
    const ePreg = this.state.pregunta
    for (let i = 0; i < ePreg.length; i++) {
      for (let j = 0; j < ePreg.length; j++) {
        entrada.push(ePreg[i][j])
      }
    }
    let compa = []

    // while (vali) {
      for (let i = 0; i < entrada.length; i++) {
        let operacion = 0
        for (let j = 0; j < entrada.length; j++) {
          operacion += entrada[j]*(wt[j][i])
        }
        tempo.push(operacion)
      }
      for (let i = 0; i < tempo.length; i++) {
        tempo[i]>0 ? compa.push(1) : compa.push(-1)
      }
      if(compa===entrada) {
        vali = false
        console.log(entrada)
        console.log(compa)
      } else {
        vali = true 
        entrada = compa
        compa = []
      }
    // }
  }

  handleShowFigure(){
    $('.hodden').css('visibility','show')
  }

  // handleActive(e){
  //   console.log(e.target)
  //   console.log(h)
  // }

  render() {

    const pregun = this.state.pregunta.map(i => {
      return (
        <div className='row fila'>
          {i.map(h=>{
            return <div onClick={()=>{ 
              return h*=-1
            }} className={'col arr'+h}></div>
          })}
        </div>
      )
    })

    // for (let i = 0; i < 10; i++) {
    //   for (let j = 0; j < 10; j++) {
    //   }
    // }

    // const test = this.state.test.map(i => {
    //   return (
    //     <div className='row fila' >
    //       {i.map(h=>{
    //         console.log(h)
    //         return <div onClick={()=>{ this.change.bind(this) }} className={'col arr'+h}>{h}</div>
    //       })}
    //     </div>
    //   )
    // })

    const respu = this.state.respuesta.map(i => {
      return (
        <div className='row fila'>
          {i.map(h=>{
            return <div className={'col arr'+h}></div>
          })}
        </div>
      )
    })

    const fig1 = this.state.fig1.map(i => {
      return (
        <div className='row fila-figu'>
          {i.map(h=>{
            return <div className={'col arr'+h+'-figu'}></div>
          })}
        </div>
      )
    })

    const fig2 = this.state.fig2.map(i => {
      return (
        <div className='row fila-figu'>
          {i.map(h=>{
            return <div className={'col arr'+h+'-figu'}></div>
          })}
        </div>
      )
    })

    const fig3 = this.state.fig3.map(i => {
      return (
        <div className='row fila-figu'>
          {i.map(h=>{
            return <div className={'col arr'+h+'-figu'}></div>
          })}
        </div>
      )
    })

    const fig4 = this.state.fig4.map(i => {
      return (
        <div className='row fila-figu'>
          {i.map(h=>{
            return <div className={'col arr'+h+'-figu'}></div>
          })}
        </div>
      )
    })

    const fig5 = this.state.fig5.map(i => {
      return (
        <div className='row fila-figu'>
          {i.map(h=>{
            return <div className={'col arr'+h+'-figu'}></div>
          })}
        </div>
      )
    })

    return (
      <div className="App">
        <div className="row header"><h1>Hopfield</h1></div>
        <div className="row icon-header">
          <button onClick={this.handleReconocer.bind(this)} >Reconocer</button>
          <div className="col-8 cubo">
            <img src={logo} className="App-logo" alt="logo" />
          </div>
          <div className="col-8 cubo">
            <img src={mario} className="App-logo" alt="logo" />
          </div>
        </div>
        <div className="row App-header">
          <div className="col-8 cubo-preg">
          <div style={{margin: '0.8rem 0 0 0.1rem'}}>{pregun}</div>
          {/* <div style={{margin: '0.8rem 0 0 0.1rem'}}>{test}</div> */}
          </div>
          <div className="col-8 cubo-resp">
            <div style={{margin: '0.8rem 0 0 0.1rem'}}>{respu}</div>
          </div>
        </div>
        <div className='row'> <button onClick={this.handleShowFigure.bind(this)}>Figuras</button> </div>
        <div className='hodden' style={{visibility:'show'}}>
          <div style={{margin: '0.8rem 0 0 1rem'}}>{fig1}</div>
          <div style={{margin: '0.8rem 0 0 1rem'}}>{fig2}</div>
          <div style={{margin: '0.8rem 0 0 1rem'}}>{fig3}</div><br/>
          <div style={{margin: '0.8rem 0 0 1rem'}}>{fig4}</div>
          <div style={{margin: '0.8rem 0 0 1rem'}}>{fig5}</div>
        </div>
        {/* <footer id="footer">
          <div className="piso"><h1>Copy Right</h1></div>
        </footer> */}
      </div>
    );
  }
}

export default App;